<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Page Title</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" type="text/css" media="screen" href="JSDemo4.css" />
    <script src="JSDemo4.js"></script>
</head>

<body onload="checkCookie()">

    <p id="demo"></p>

    <script>
        var w = window.innerWidth ||
            document.documentElement.clientWidth ||
            document.body.clientWidth;
        var h = window.innerHeight ||
            document.documentElement.clientHeight ||
            document.body.clientHeight;
        //    width 就是窗口能使用的最大的宽度 availWidth 就是窗口能使用的最大的有效宽度（通常与屏幕的宽度、高度一致）
        // innerWidth就是窗口当前的宽度（不含浏览器的边框，但包含滚动条）
        x = document.getElementById("demo");
        x.innerHTML = "浏览器window总宽度: " + w + ", 高度: " + h + "。"
    </script>
    <script>
        document.write("总宽度/高度: ");
        document.write(screen.width + "*" + screen.height);
        document.write("<br>");
        document.write("可用宽度/高度: ");
        document.write(screen.availWidth + "*" + screen.availHeight);
        document.write("<br>");
        document.write("色彩深度: ");
        document.write(screen.colorDepth);
        document.write("<br>");
        document.write("色彩分辨率: ");
        document.write(screen.pixelDepth);

        // window.location.assign("http://www.w3cschool.cc") //重定向新的url

        console.log("返回 web 主机的域名" + location.hostname);

        console.log("返回当前页面的路径和文件名" + location.pathname);

        console.log("location.port 返回 web 主机的端口 （80 或 443）" + location.protocol);

        console.log("返回所使用的 web 协议（http:// 或 https://）" + location.port);

        console.log("当前url地址" + location.href);
    </script>
    <script>
        function goBack() {
            history.back()
        }

        function goForward() {
            history.forward()
        }
    </script>
    <input type="button" value="Back" onclick="goBack()">

    <input type="button" value="Forward" onclick="goForward()">
    <div id="example"></div>
    <script>
        // 来自 navigator 对象的信息具有误导性，不应该被用于检测浏览器版本，这是因为：
        // navigator 数据可被浏览器使用者更改
        // 一些浏览器对测试站点会识别错误
        // 浏览器无法报告晚于浏览器发布的新操作系统

        // 由于不同的浏览器支持不同的对象，您可以使用对象来检测浏览器。例如，
        //由于只有 Opera 支持属性 "window.opera"，您可以据此识别出 Opera。
        // 例子：if (window.opera) {...some action...}
        txt = "<p>浏览器代号: " + navigator.appCodeName + "</p>";
        txt += "<p>浏览器名称: " + navigator.appName + "</p>";
        txt += "<p>浏览器版本: " + navigator.appVersion + "</p>";
        txt += "<p>启用Cookies: " + navigator.cookieEnabled + "</p>";
        txt += "<p>硬件平台: " + navigator.platform + "</p>";
        txt += "<p>用户代理: " + navigator.userAgent + "</p>";
        txt += "<p>用户代理语言: " + navigator.systemLanguage + "</p>";
        document.getElementById("example").innerHTML = txt;
    </script>
    <button onclick="myFunction()">确认按钮，点我</button>
    <p id="demo1"></p>
    <script>
        function myFunction() {
            var x;
            var r = confirm("按下按钮!");
            if (r == true) {
                x = "你按下了\"确定\"按钮!";
            } else {
                x = "你按下了\"取消\"按钮!";
            }
            document.getElementById("demo1").innerHTML = x;
        }
    </script>
    <script>
        function myFunction2() {
            alert("你好，我是一个警告框！");
        }
    </script>
    <input type="button" onclick="myFunction2()" value="显示警告框" />
    <p>点击第一个按钮等待3秒后出现"Hello"弹框。</p>
    <p>点击第二个按钮来阻止第一个函数运行。（你必须在3秒之前点击它）。</p>
    <button onclick="myFunction3()">过好多毫秒后执行一次就停止，点我</button>
    <button onclick="myStopFunction()">停止弹框</button>
    <script>
        var myVar;

        function myFunction3() {
            myVar = setTimeout(function () {
                alert("Hello")
            }, 3000);
        }

        function myStopFunction() {
            clearTimeout(myVar);
        }
    </script>
    <p>点击第一个按钮等待3秒后出现"Hello"弹框。</p>
    <p>点击第二个按钮来阻止第一个函数运行。（你必须在3秒之前点击它）。</p>
    <button onclick="myFunction4()">连续间隔时间执行,点我</button>
    <button onclick="myStopFunction()">停止弹框</button>
    <script>
    var myVar;
    function myFunction4(){
        myVar=setTimeout(function(){alert("Hello")},3000);
    }
    function myStopFunction(){
        clearTimeout(myVar);
    }
    </script>
    <script>
            function setCookie(cname,cvalue,exdays){
                var d = new Date();
                d.setTime(d.getTime()+(exdays*24*60*60*1000));
                var expires = "expires="+d.toGMTString();
                document.cookie = cname+"="+cvalue+"; "+expires;
            }
            function getCookie(cname){
                var name = cname + "=";
                var ca = document.cookie.split(';');
                for(var i=0; i<ca.length; i++) {
                    var c = ca[i].trim();
                    if (c.indexOf(name)==0) { return c.substring(name.length,c.length); }
                }
                return "";
            }
            function checkCookie(){
                var user=getCookie("username");
                if (user!=""){
                    alert("欢迎 " + user + " 再次访问");
                }
                else {
                    user = prompt("请输入你的名字:","");
                      if (user!="" && user!=null){
                        setCookie("username",user,30);
                    }
                }
            }
            </script>

</body>

</html>>